{"pages":[{"title":"About","date":"2021-05-11T01:07:37.931Z","path":"about/index.html","text":"关于我自己嗨呀，我好菜呀！有什么可说的呢。。。 看过太多同龄的大神，体会过各种被碾压得成渣渣的感觉，其中有来自某看着成长起来的小学生 (虽然截止现在-2016-已经初中了)，在各种博客中随时能发现随手就能碾压我的各种初高中生博主。 受到了有来自无节操赛艇群里各路 dalao 的鼓励，同时也让我默默献上了膝盖。。。 喜欢二次元，天天看着群里 dalao 穿女装、开车，不敢说话。。。受到某老司机的影响，所以自己也想建个车库（咳，我只是说文件应该整理对不对！） 各方面都是辣鸡，但是觉得好玩就不会放弃。 关于编程蒟蒻。。。各种意义上都是弱鸡。。。能和各位 蒟苣 dalao 生活在同一个时代真是了不起。 喜欢 C#，热爱玩 Python。因为觉得 C# 代码优美，逻辑关系明确，写的时候很舒服；用 Python 是因为喜欢脚本语言的便捷性，但是一直都吐槽动态语言的各种不爽，Python 学到后面各种黑科技黑魔法，总看到有 dalao 写的代码把我认为应该是 Python 设计不合理的地方当特性玩得飞起，卧槽，谁说 Python 简单来着！ 话说回来，shell 和 js 这种丧心病狂、自带混淆、又不得不用的语言，让我还是对 Python 感到别无所求了 (毕竟好那么多是不是)。 写页面向来无视浏览器兼容性，有各种写出失败且不可调试代码的丰富经历。 背景图包本站背景图片均来自网络，因个人喜好所以设为背景，不作商用，部分尚不明出处，绝大部分来自于我所喜爱的几位 P 站 画师，此处向各位大触们再次献上膝盖：（以下列举尚不完整~） 【wlop】 【千夜QYS3】 【白夜ReKi】 【KyoD＋@ミクラブ】 【小忍.pr】 【ASK】 【Cait】 业余爱好喜欢写字，喜欢弹钢琴 (虽然我只有手卷琴~)，喜欢画老婆~~ 不过还 too young, too naive ! 还需要再学习一个。 也喜欢古文，比如我就念了一句诗： ​ 苟利国家生死以 。。。 最后放一张齐神的嫌弃脸 - (我跟你讲我就这个表情！)"},{"title":"Categories","date":"2021-05-11T01:07:37.931Z","path":"categories/index.html","text":""},{"title":"Tags","date":"2021-05-11T01:07:37.935Z","path":"tags/index.html","text":""}],"posts":[{"title":"myname","date":"2021-05-11T01:07:37.927Z","path":"wiki/7、工作搬砖/售前问题集/test123/","text":"test","tags":[],"categories":[{"name":"7、工作搬砖","slug":"7、工作搬砖","permalink":"http://wiki.pidaye.top/categories/7、工作搬砖/"},{"name":"售前问题集","slug":"7、工作搬砖/售前问题集","permalink":"http://wiki.pidaye.top/categories/7、工作搬砖/售前问题集/"}]},{"title":"npm_apm_pip工具修改国内源.md","date":"2020-08-31T06:26:00.000Z","path":"wiki/5、编程相关/编程技巧/npm_apm_pip工具修改国内源/","text":"大家都用过npm、apm、pip之类的包下载安装工具，但是受限于默认源国内访问过慢的问题导致使用体验极差，这里总结了各个工具修改源为国内源的方法，详细参见下方： npm篇NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种： 允许用户从NPM服务器下载别人编写的第三方包到本地使用。 允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。 允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。npm修改国内源永久修改，参见下代码：1npm config set registry https://registry.npm.taobao.org 查看下是否修改成功：1npm config get registry 临时修改1npm --registry https://registry.npm.taobao.org install express npm国内源清单淘宝npm镜像 搜索地址：http://npm.taobao.org/registry地址：http://registry.npm.taobao.org/cnpmjs镜像 搜索地址：http://cnpmjs.org/ registry地址：http://r.cnpmjs.org/ pip篇pip 是 Python 包管理工具，该工具提供了对Python 包的查找、下载、安装、卸载的功能。 pip修改国内源永久修改参见下代码：1pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 临时修改：1pip install scrapy -i https://pypi.tuna.tsinghua.edu.cn/simple pip国内源清单 阿里云 http://mirrors.aliyun.com/pypi/simple/ 中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/ 豆瓣(douban) http://pypi.douban.com/simple/ 清华大学 https://pypi.tuna.tsinghua.edu.cn/simple/ 中国科学技术大学 http://pypi.mirrors.ustc.edu.cn/simple/ apm篇Atom的插件更新功能由apm提供。apm内部封装了一个npm。 apm修改国内源永久修改：1apm config set registry http://registry.npm.taobao.org apm国内源清单淘宝npm镜像 搜索地址：http://npm.taobao.org/registry地址：http://registry.npm.taobao.org/cnpmjs镜像 搜索地址：http://cnpmjs.org/ registry地址：http://r.cnpmjs.org/","tags":[{"name":"npm","slug":"npm","permalink":"http://wiki.pidaye.top/tags/npm/"},{"name":"apm","slug":"apm","permalink":"http://wiki.pidaye.top/tags/apm/"},{"name":"pip","slug":"pip","permalink":"http://wiki.pidaye.top/tags/pip/"}],"categories":[{"name":"5、编程相关","slug":"5、编程相关","permalink":"http://wiki.pidaye.top/categories/5、编程相关/"},{"name":"编程技巧","slug":"5、编程相关/编程技巧","permalink":"http://wiki.pidaye.top/categories/5、编程相关/编程技巧/"}]},{"title":"Markdown 语法手册完整整理","date":"2019-12-13T08:38:49.000Z","path":"wiki/5、编程相关/语法手册/markdown语法手册/","text":"（Markdown语法没有一个统一的标准,不同的工具或平台采用的标准不一样，所以有些语法规则和功能是有差异的） 斜体和粗体 代码： *斜体*或_斜体_ **粗体** ***加粗斜体*** ~~删除线~~ 显示效果： 这是一段斜体 这是一段粗体 这是一段加粗斜体 这是一段删除线 分级标题 第一种写法： 这是一个一级标题 ============================ 这是一个二级标题 -------------------------------------------------- 第二种写法： # 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 由于用了标记编辑器会把所有标题写到目录大纲中，在这里写的演示标题也会列进去，所以就不演示了。同学们自己在编辑器中观察，很简单，一级标题字号最大，依级递减。（注：简书Markdown不支持目录功能） 超链接 Markdown 支持两种形式的链接语法： 行内式和参考式两种形式，行内式一般使用较多。 3.1. 行内式语法说明： []里写链接文字，()里写链接地址, ()中的””中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字。[链接文字](链接地址 “链接标题”)这样的形式。链接地址与链接标题前有一个空格。 代码： 欢迎来到[迟道的主页](http://www.jianshu.com/u/de4923b06bfc) 欢迎来到[迟道的主页](http://www.jianshu.com/u/de4923b06bfc &quot;迟道的主页&quot;) 显示效果：欢迎来到迟道的主页欢迎来到迟道的主页 3.2. 参考式参考式超链接一般用在学术论文上面，或者另一种情况，如果某一个链接在文章中多处使用，那么使用引用 的方式创建链接将非常好，它可以让你对链接进行统一的管理。 语法说明：参考式链接分为两部分，文中的写法 [链接文字][链接标记]，在文本的任意位置添加[链接标记]:链接地址 “链接标题”，链接地址与链接标题前有一个空格。 如果链接文字本身可以做为链接标记，你也可以写成[链接文字][][链接文字]：链接地址的形式，见代码的最后一行。 代码： 我经常去的几个网站[GitHub][1]、[知乎][2]以及[简书][3] [简书][3]是一个不错的[写作社区][]。 [1]:https://github.com &quot;GitHub&quot; [2]:https://www.zhihu.com &quot;知乎&quot; [3]:http://www.jianshu.com &quot;简书&quot; [写作社区]:http://www.jianshu.com 显示效果：我经常去的几个网站GitHub、知乎以及简书简书是一个不错的写作社区。 3.3. 自动链接语法说明：Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;&gt;;包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如： 代码： &lt;http://example.com/&gt; &lt;address@example.com&gt; 显示效果：http://example.com/address@example.com 锚点 网页中，锚点其实就是页内超链接，也就是链接本文档内部的某些元素，实现当前页面中的跳转。比如我这里写下一个锚点，点击回到目录，就能跳转到目录。 在目录中点击这一节，就能跳过来。还有下一节的注脚。这些根本上都是用锚点来实现的。 注意： Markdown Extra 只支持在标题后插入锚点，其它地方无效。 语法描述：在你准备跳转到的指定标题后插入锚点{ #标记}，然后在文档的其它地方写上连接到锚点的链接。 代码： ## 0. 目录{ #index} 跳转到[目录]( #index) 显示效果： 跳转到目录 列表 5.1. 无序列表使用 *，+，- 表示无序列表。 代码： - 无序列表项 一 - 无序列表项 二 - 无序列表项 三 显示效果： 无序列表项 一 无序列表项 二 无序列表项 三 5.2. 有序列表有序列表则使用数字接着一个英文句点。代码： 1. 有序列表项 一 2. 有序列表项 二 3. 有序列表项 三 显示效果： 有序列表项 一 有序列表项 二 有序列表项 三 5.3. 定义型列表语法说明： 定义型列表由名词和解释组成。一行写上定义，紧跟一行写上解释。解释的写法:紧跟一个缩进(Tab) 代码： Markdown : 轻量级文本标记语言，可以转换成html，pdf等格式（左侧有一个可见的冒号和四个不可见的空格） 代码块 2 : 这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格） 代码块（左侧有八个不可见的空格） 显示效果：Markdown: 轻量级文本标记语言，可以转换成html，pdf等格式 代码块 2: 这是代码块的定义 代码块（左侧有八个不可见的空格） 5.4. 列表缩进语法说明： 列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。 要让列表看起来更漂亮，你可以把内容用固定的缩进整理好（显示效果与代码一致）： 轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！ 那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。 但是如果你懒，那也行：代码： * 轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。 那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。 软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！ * 那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。 寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。 但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ 悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。 显示效果： 轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！ 那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。 5.5. 包含段落的列表语法说明：列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符（显示效果与代码一致）： 轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！ 那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ 悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。 如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：代码： * 轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。 那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。 软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！ 那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。 寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。 但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ * 悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。 显示效果： 轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！ 那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ 悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。 5.6. 包含引用的列表语法说明：如果要在列表项目内放进引用，那 > 就需要缩进： 代码： * 阅读的方法: &gt; 打开书本。 &gt; 打开电灯。 显示效果： 阅读的方法: 打开书本。打开电灯。 5.7. 包含代码区块的引用语法说明：如果要放代码区块的话，该区块就需要缩进两次，也就是 8 个空格或是 2 个制表符： 一列表项包含一个列表区块： &lt;代码写在这&gt; 5.8. 一个特殊情况在特殊情况下，项目列表很可能会不小心产生，像是下面这样的写法： 1986. What a great season. 会显示成： What a great season. 换句话说，也就是在行首出现数字-句点-空白，要避免这样的状况，你可以在句点前面加上反斜杠： 1986\\. What a great season. 会显示成： 1986. What a great season. 引用 语法说明：引用需要在被引用的文本前加上&gt;符号。 代码： &gt; 这是一个有两段文字的引用, &gt;无意义的占行文字1. &gt;无意义的占行文字2. &gt; &gt;无意义的占行文字3. &gt;无意义的占行文字4. 显示效果： 这是一个有两段文字的引用,无意义的占行文字1.无意义的占行文字2. 无意义的占行文字3.无意义的占行文字4. Markdown 也允许你偷懒只在整个段落的第一行最前面加上 &gt;： 代码： &gt; 这是一个有两段文字的引用, 无意义的占行文字1. 无意义的占行文字2. &gt;无意义的占行文字3. 无意义的占行文字4. 显示效果： 这是一个有两段文字的引用,无意义的占行文字1.无意义的占行文字2. 无意义的占行文字3.无意义的占行文字4. 6.1. 引用的多层嵌套区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt;： 代码： &gt;&gt;&gt; 请问 Markdwon 怎么用？ - 小白 &gt;&gt;自己看教程！ - 愤青 &gt;教程在哪？ - 小白 显示效果： 请问 Markdwon 怎么用？ - 小白 自己看教程！ - 愤青 教程在哪？ - 小白 6.2. 引用其它要素引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：代码： &gt; 1. 这是第一行列表项。 &gt; 2. 这是第二行列表项。 &gt; &gt; 给出一些例子代码： &gt; &gt; return shell_exec(&quot;echo $input | $markdown_script&quot;); 显示效果： 这是第一行列表项。 这是第二行列表项。 给出一些例子代码： return shell_exec(&quot;echo $input | $markdown_script&quot;); 插入图像 图片的创建方式与超链接相似，而且和超链接一样也有两种写法，行内式和参考式写法。 语法中图片Alt的意思是如果图片因为某些原因不能显示，就用定义的图片Alt文字来代替图片。 图片Title则和链接中的Title一样，表示鼠标悬停与图片上时出现的文字。 Alt 和 Title 都不是必须的，可以省略，但建议写上。 7.1. 行内式语法说明： ![图片Alt](图片地址 “图片Title”) 代码： 快乐学习： ![快乐学习](http://upload-images.jianshu.io/upload_images/1001659-7535c9e3fe16240d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240 &quot;快乐学习&quot;) 显示效果： 快乐学习： 快乐学习 7.2. 参考式语法说明：在文档要插入图片的地方写![图片Alt][标记] 在文档的最后写上[标记]:图片地址 “Title” 代码： 快乐学习： ![快乐学习][study] [study]:http://upload-images.jianshu.io/upload_images/1001659-7535c9e3fe16240d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240 &quot;快乐学习&quot; 显示效果：快乐学习： 快乐学习 内容目录 在段落中填写以显示全文内容的目录结构。 效果参见最上方的目录 注脚 语法说明： 在需要添加注脚的文字后加上脚注[^注脚名字],称为加注。 然后在文本的任意位置(一般在最后)添加脚注，脚注前必须有对应的脚注名字。 注意：经测试注脚与注脚之间必须空一行，不然会失效。成功后会发现，即使你没有把注脚写在文末，经Markdown转换后，也会自动归类到文章的最后。 代码： 使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2], 你可以使用简书或者支持Markdown的编辑器进行书写。 [^1]:Markdown是一种纯文本标记语言 [^2]:HyperText Markup Language 超文本标记语言 显示效果： 使用 Markdown[1]可以效率的书写文档, 直接转换成 HTML[2], 你可以使用简书或者支持Markdown的编辑器进行书写。 注：脚注自动被搬运到最后面，请到文章末尾查看，并且脚注后方的链接可以直接跳转回到加注的地方。 数学公式 10.1. $ 表示行内公式： （注：简书Markdown不支持此公式写法）代码： 质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。 显示效果：质能守恒方程可以用一个很简洁的方程式 来表达。 10.2 $$ 表示整行公式：（注：简书Markdown不支持此公式写法）代码： $$\\sum_{i=1}^n a_i=0$$ $$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2 $$ $$\\sum^{j-1}_{k=0}{\\widehat{\\gamma}_{kj} z_k}$$ 显示效果：%20%3D%20x_1%5E2%20%2B%20x_2%5E2%20%2B%20%5Ccdots%20%2B%20x_n%5E2) 访问 MathJax 参考更多使用方法。 10.3 简书公式写法：使用forkosh服务器，forkosh上提供了关于Latex公式的一份简短而很有用的帮助，参考[4]和[5].[4]:http://www.forkosh.com/mathtextutorial.html[5]:http://www.forkosh.com/mathtex.html使用forkosh插入公式的方法是： ![](http://www.forkosh.com/mathtex.cgi? 在此处插入Latex公式) 示例1： ![](http://www.forkosh.com/mathtex.cgi? E=mc^2) 效果：[图片上传失败…(image-a87a9e-1541470046355)]示例2： ![](http://www.forkosh.com/mathtex.cgi? \\sum_{i=1}^n a_i=0) 效果：[图片上传失败…(image-3e19a0-1541470046355)] 示例3： ![](http://www.forkosh.com/mathtex.cgi? f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2) 效果：[图片上传失败…(image-ef1b76-1541470046355)] = x_1^2 + x_2^2 + \\cdots + x_n^2) 示例4： ![](http://www.forkosh.com/mathtex.cgi? \\sum^{j-1}_{k=0}{\\widehat{\\gamma}_{kj} z_k}) 效果：[图片上传失败…(image-abbf39-1541470046355)] 表格 语法说明： 不管是哪种方式，第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。 列于列之间用管道符|隔开。原生方式的表格每一行的两边也要有管道符。 第二行还可以为不同的列指定对齐方向。默认为左对齐，在-右边加上:就右对齐。 代码： 简单方式写表格： 学号|姓名|分数 -|-|- 小明|男|75 小红|女|79 小陆|男|92 原生方式写表格： |学号|姓名|分数| |-|-|-| |小明|男|75| |小红|女|79| |小陆|男|92| 为表格第二列指定方向： 产品|价格 -|-: Leanote 高级账号|60元/年 Leanote 超级账号|120元/年 显示效果：简单方式写表格： 学号 姓名 分数 小明 男 75 小红 女 79 小陆 男 92 原生方式写表格： 学号 姓名 分数 小明 男 75 小红 女 79 小陆 男 92 为表格第二列指定方向： 产品 价格 为知笔记VIP 60元/年 有道云笔记会员 198元/年 分隔线 你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线： 代码： * * * *** ***** - - - --------------------------------------- 显示效果都一样： 代码 对于程序员来说这个功能是必不可少的，插入程序代码的方式有两种，一种是利用缩进(Tab), 另一种是利用“`”符号（一般在ESC键下方）包裹代码。 语法说明： 插入行内代码，即插入一个单词或者一句代码的情况，使用`code`这样的形式插入。 插入多行代码，可以使用缩进或者```,具体看示例。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748**注意： 缩进式插入前方必须有空行**### 13.1. 行内式**代码：** C语言里的函数 `scanf()` 怎么使用？**显示效果：**C语言里的函数 `scanf()` 怎么使用？### 13.2. 缩进式多行代码缩进 4 个空格或是 1 个制表符一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。**代码：** #include &lt;stdio.h&gt; int main(void) &#123; printf(&quot;Hello world\\n&quot;); &#125;**显示效果：** #include &lt;stdio.h&gt; int main(void) &#123; printf(&quot;Hello world\\n&quot;); &#125;### 13.3. 用六个`包裹多行代码**代码：**``` #include &lt;stdio.h&gt; int main(void) &#123; printf(&quot;Hello world\\\\n&quot;); &#125; 显示效果： #include &lt;stdio.h&gt; int main(void) { printf(&quot;Hello world\\n&quot;); } 13.4. 代码高亮代码高亮示例: /** * nth element in the fibonacci series. * @param n &gt;= 0 * @return the nth element, &gt;= 0. */ function fib(n) { var a = 1, b = 1; var tmp; while (--n &gt;= 0) { tmp = a; a += b; b = tmp; } return a; } document.write(fib(10)); class Employee: empCount = 0 def __init__(self, name, salary): self.name = name self.salary = salary Employee.empCount += 1 13.5. HTML 原始码 （注：简书Markdown不支持HTML原始码）在代码区块里面， &amp; 、 &lt; 和 > 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，剩下的 Markdown 都会帮你处理，例如： 代码： 第一个例子： &lt;div class=&quot;footer&quot;&gt; © 2004 Foo Corporation &lt;/div&gt; 第二个例子： &lt;table&gt; &lt;tr&gt; &lt;th rowspan=&quot;2&quot;&gt;值班人员&lt;/th&gt; &lt;th&gt;星期一&lt;/th&gt; &lt;th&gt;星期二&lt;/th&gt; &lt;th&gt;星期三&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;李强&lt;/td&gt; &lt;td&gt;张明&lt;/td&gt; &lt;td&gt;王平&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; 显示效果： 第一个例子： HTML源码效果 第二个例子： HTML表格 todo list （注：简书Markdown不支持todo list） 代码： 近期任务安排: - [x] 整理Markdown手册 - [ ] 改善项目 - [x] 优化首页显示方式 - [x] 修复闪退问题 - [ ] 修复视频卡顿 - [ ] A3项目修复 - [x] 修复数值错误 效果： todo list 时序图 （注：简书Markdown不支持时序图） 时序图语法 代码： participant 客户端 as A participant 服务端 as B participant 通行证中心 as C Note over A:用户输入通行证账号、密码 A-&gt;C: 发送账号、密码 Note over C:验证账号、密码 C--&gt;&gt;A:返回token A-&gt;B:发送token B-&gt;C:验证token C--&gt;&gt;B:验证成功 B--&gt;&gt;A:登陆成功 Note left of A:左边注释 B-&gt;B:自交互 Note right of C:右边注释 效果： 时序图 流程图 （注：简书Markdown不支持流程图） 流程图语法 st=&gt;start: 开始 io=&gt;inputoutput: 验证 op=&gt;operation: 选项 cond=&gt;condition: 是 或 否？ sub=&gt;subroutine: 子程序 e=&gt;end: 结束 st-&gt;io-&gt;op-&gt;cond cond(yes)-&gt;e cond(no)-&gt;sub-&gt;io 效果： 流程图 甘特图 （注：简书Markdown不支持甘特图） 甘特图语法 gantt dateFormat YYYY-MM-DD title 产品计划表 section 初期阶段 明确需求: 2017-03-01, 10d section 中期阶段 跟进开发: 2017-03-11, 9d section 后期阶段 抽查测试: 2017-03-20, 9d 效果： 甘特图 Markdown是一种纯文本标记语言 ↩ HyperText Markup Language 超文本标记语言 ↩","tags":[],"categories":[{"name":"5、编程相关","slug":"5、编程相关","permalink":"http://wiki.pidaye.top/categories/5、编程相关/"},{"name":"语法手册","slug":"5、编程相关/语法手册","permalink":"http://wiki.pidaye.top/categories/5、编程相关/语法手册/"}]},{"title":"cdr提示盗版解决方案","date":"2019-10-11T03:48:00.000Z","path":"wiki/8、电脑故障/软件故障/cdr/","text":"很多网友在使用 CorelDRAW 的时候，会弹出一个提示框，像下图这样(或者表现为卡在启动画面，无法进入软件主界面)，这可能是软件联网检测到了你是盗版用户，不给启动。今天教大家如何解决这个问题。 解决方法第一步，删除 C:\\\\Users\\\\用户名\\\\AppData\\\\Roaming\\\\Corel 文件夹里的所有内容，注意这个 AppData 文件夹是隐藏的，需要显示隐藏文件夹，才能看到。本地判断是否是盗版的数据就保存在这个文件夹里，这个文件夹下的文件是 CorelDRAW 的缓存文件，删除了没有影响，下次打开 CorelDRAW 又会自动生成。 第二步，把 CorelDRAW 主程序添加到防火墙出站规则里，屏蔽软件联网即可。","tags":[{"name":"cdr","slug":"cdr","permalink":"http://wiki.pidaye.top/tags/cdr/"}],"categories":[{"name":"8、电脑故障","slug":"8、电脑故障","permalink":"http://wiki.pidaye.top/categories/8、电脑故障/"},{"name":"软件故障","slug":"8、电脑故障/软件故障","permalink":"http://wiki.pidaye.top/categories/8、电脑故障/软件故障/"}]},{"title":"解决chrome开发者模式弹窗","date":"2019-10-09T05:26:00.000Z","path":"wiki/8、电脑故障/软件故障/chrome开发者模式弹窗/","text":"前言作为一个前端程序员，难免会有一些专属自己的小扩展，没必要每一个都发到Chrome应用商店去，虽然可以勾选“开发者模式”来运行本地插件，但是每次启动都会有一个烦人的 “请停用以开发者模式运行的扩展程序” 提示，这个提示有多烦人，接触过的人都知道，启动的时候它不立即提示，等过了几秒钟等你打开某个网页开始执行某些操作时它突然弹出来干扰你的操作，真是苦不堪言！所以总想着如何把它给去掉。作为一个前端程序员，难免会有一些专属自己的小扩展，没必要每一个都发到Chrome应用商店去，虽然可以勾选开发者模式来运行本地插件，但是每次启动都会有一个烦人的请停用以开发者模式运行的扩展程序提示，这个提示有多烦人，接触过的人都知道，启动的时候它不立即提示，等过了几秒钟等你打开某个网页开始执行某些操作时它突然弹出来干扰你的操作，真是苦不堪言！所以总想着如何把它给去掉。 解决方法网上搜索了一圈，发现主要有3种方法——组策略法，运行批处理法，直接改dll文件法。第一种组策略的据说很早就失效了，我亲测了一下确实没用。另外一个批处理的方法据说也生效了，而且批处理权限太大没敢尝试运行，直接试了第三种方法，一次性成功！下面记录一下解决过程（ps原文说的不是特别清楚，有些误导人的地方，我这里全部重新截图描述一遍） 2.1. 修改dll文件法 打开Chrome安装目录，找到chrome.dll文件，用x64dbg打开， 双击x96dbg.exe，然后选择x64dbg（如果打不开，换x32dbg打开）： 然后连续多次点击运行到用户代码按钮，直至窗口标题处的模块变成chrome.dll： 然后在主面板右键依次选择搜索 -&gt; 当前模块 -&gt; 字符串： 然后会打开一个搜索界面，等待进度条加载完毕，搜索ExtensionDeveloperModeWarning： 会搜到2条结果，双击第一个，跳转到反汇编界面，往上翻一点，找到cmp eax,2（也有可能是cmp eax,3）： 双击打开编辑页面，修改成cmp eax,9，然后点击确定，注意只需要点击一次确定即可，点击确定后它还是会继续弹出其它行的编辑界面，此时直接关闭对话框即可。： 修改完之后Ctrl+P导出修改过的dll文件（点击修补文件按钮就是导出dll文件）： 你可以把dll文件导出到其它某个位置，然后把原始chrome.dll文件备份，再把这个修改过的替换，然后重启Chrome，可以发现该死的提示已经没有了。 以上步骤测试于`chrome@64.0.3282.140`。 2.2. 组策略法 经测试已失效： https://jingyan.baidu.com/article/ce09321b7d581e2bff858f23.html 2.3. 批处理法 以下方法未亲测，但据说已失效： http://blog.csdn.net/a493113713/article/details/54917592 参考 本文引用小茗同学 的文章，并做了一定缩减； https://stackoverflow.com/questions/30287907/how-to-get-rid-of-disable-developer-mode-extensions-pop-up/30361260#30361260 https://www.52pojie.cn/forum.php?mod=viewthread&amp;tid=695123&amp;page=1&amp;authorid=533705 个人网站： https://haoji.megithub： https://github.com/sxei博客园： http://www.cnblogs.com/liuxianan","tags":[{"name":"chrom","slug":"chrom","permalink":"http://wiki.pidaye.top/tags/chrom/"},{"name":"开发者","slug":"开发者","permalink":"http://wiki.pidaye.top/tags/开发者/"}],"categories":[{"name":"8、电脑故障","slug":"8、电脑故障","permalink":"http://wiki.pidaye.top/categories/8、电脑故障/"},{"name":"软件故障","slug":"8、电脑故障/软件故障","permalink":"http://wiki.pidaye.top/categories/8、电脑故障/软件故障/"}]},{"title":"抠图技巧","date":"2019-08-30T01:32:00.000Z","path":"wiki/2、设计美学/PS专栏/抠图技巧/","text":"基础篇 基础篇讲到的抠图技巧是针对日常简单的抠图，要求不高，用法比较简单，如纯色，大色差，黑白抠图等。 1、快速选择/魔棒工具（常用） 此种抠图方式最为简单方便，从选区原理来理解的话，他们都像是在选取色块。快速选择是在选区和当前选区类似的色块，当遇到有差异的边缘即不选择；魔棒工具则是通过色差范围来控制色块的选区范围，超过选定颜色的容差则不选择。 2、多边形套索（规则多边形） 最初接触PS想必大家都用过套索工具，这个工具选区是最为方便的，多边形套索抠图当然就比较适合线性规则图形抠图了。 3、背景橡皮擦（色差大的） 背景橡皮檫工具比较倾向于魔棒工具，主要用于纯色背景抠图（边缘要求较为清晰），可实现对选择的范围内的所有和十字光标点颜色相似的颜色扣除。容差越大扣除的色域越广。 4、钢笔抠图（清晰轮廓） 钢笔工具用的地方比较多，可以扣规则和不规则但是边缘较为清晰的图片，当然效率跟处理图片的边缘复杂度不同而不同，用的熟练的话还是效果比较好的。 中级篇 中级篇的抠图技巧大多为较为复杂一点的抠图方式，选区比初级篇涉及的较为精细，可以根据不同的抠图场景选择不同的方式。 1、图层蒙版抠图（黑白抠图）2、色彩范围抠图（色彩差异大）3、调整边缘（边缘差异大）高级篇 高级篇则涉及更为复杂的方式，可能使用的场景较少，难度也稍高一点，当然理解了之后就能很好的完成了。 1、通道抠图（复杂的抠图）2、图片混合模式抠图（正片叠底去白、滤色去黑色）3、三通道混合抠图（真实抠图，去黑色）","tags":[],"categories":[{"name":"2、设计美学","slug":"2、设计美学","permalink":"http://wiki.pidaye.top/categories/2、设计美学/"},{"name":"PS专栏","slug":"2、设计美学/PS专栏","permalink":"http://wiki.pidaye.top/categories/2、设计美学/PS专栏/"}]},{"title":"test","date":"2019-08-10T12:08:00.000Z","path":"wiki/7、工作搬砖/售后问题集/test/","text":"直接写","tags":[],"categories":[{"name":"7、工作搬砖","slug":"7、工作搬砖","permalink":"http://wiki.pidaye.top/categories/7、工作搬砖/"},{"name":"售后问题集","slug":"7、工作搬砖/售后问题集","permalink":"http://wiki.pidaye.top/categories/7、工作搬砖/售后问题集/"},{"name":"加一个","slug":"7、工作搬砖/售后问题集/加一个","permalink":"http://wiki.pidaye.top/categories/7、工作搬砖/售后问题集/加一个/"}]},{"title":"欢迎来到我的wiki站点","date":"2019-08-10T09:41:43.000Z","path":"wiki/index/","text":"首先简单说一下建站的初衷——其实在此之前一直想构建一个适合自己的知识管理体系，可奈何自己经验太少，天资又很愚笨，很多东西都是只知皮毛，没有做过深入了解和系统的总结，一直对知识管理都处于一个比较馄饨的状态；别人都说学霸之所以为学霸，是因为他们都有一套适合自己的思维和知识管理体系，他们知道如何去理解记忆和关联信息，同时也能追根溯源，理解事物规律，可以举一反三，灵活套用，这种智慧需要练习、积累和升华。既然不可一蹴而就，那咱就老老实实多学多悟，建立适合自己的知识管理模式，相信有一天量变形成质变，咱也可以当回学霸，哈哈哈，嗝！ 有点跑偏了，以上便是本站建立的目的，希望自己能够坚持，努力！奋斗！ 顺便说一下，本站搭建要感谢zthxxx大神的对hexo-theme-Wikitten主题的付出，让我也有了一个合适的工具来丰富我的wiki站，希望大家可以多多去他的github捧场。 在这里也提一下zthxxx在他wiki站提到的一些观点，我本人是非常赞同和受用： 知识不能碎片化，要结构化，管理知识要优雅，对美好而且有序的事物是我们一致的追求。 知识管理系统化必将经历这三个阶段：笔记系统 主大块信息的 分类和整理，Wiki 主零碎知识的 积累，而 博客 只在于 精。 适合自己的才是最好的，包括工具和方法，不要过于纠结。 建立联系 是加强理解和记忆的好方法，多读书总是有益的，见识往往可以丰富理解。 练习很重要 孰能生巧，理解之后多多使用才能压缩信息，量变才能触发。 最后简单介绍下我目前在用的一套知识管理方法，仅供参考： 知识收集整理阶段，我用到的工具有 Evernote 、幕布 和 OneNote ，针对不同类型的信息我会使用不同的工具，Evernote倾向于做 学习知识点和信息摘取，比如学习python语言或者个人物品清单；幕布倾向于做 生活技巧要点汇总，比如知乎知识点，网站推荐汇总等；OneNote则作为 读书笔记或者札记，以及文字截取等。每个工具都能发挥长处，用的顺手很重要。 做好整理后有些东西需要不断积累和整理，初步消化理解的可以直接放到wiki上，方便随时取用和引用，这部分知识会比较客观。 有些知识点达到一定的量后可以先找个主题，这个过程用于验证自己的学习成果，然后根据自己的理解行文和构思，这部分的内容会带有主观的认知，会抛出一些自己的观点，有互动和思考。 以下是基本流程： 通过网页、RSS、微信等网络渠道作为知识获取来源，借用各种插件和软件做快速批量导入。 通过笔记系统（手写笔记、OneNote、Evernote）初步筛选有价值有针对性的信息，收藏信息，分类整理，做读后 要点 笔记记录。 自己平时突然想到或总结的一两句话，或很零碎的点子、灵感，初步消化的内容，则用 Wiki 记录。 最后当 Wiki 在某版块有一定量后，将这方面笔记和 Wiki 中的内容重读，整理和提炼，二次消化精炼再加上自己的感悟和理解，写成文章发表在 博客 上。 Wiki对知识的构建仅仅起到了知识扩充和有序化，随着日积月累零散的知识会慢慢丰富， Wiki 中某个版块记录的内容也就会变多，也就是通过积累，把原本大量碎片化的知识结构化整理起来了。 博客的目的是 分享和展示，分享自己的知识，展示自己的水平，需要放拿得出手的东西，因此不适合放碎片化的只言片语，更适合放 一个系列 的总结或者教程等，是一个十分成体系的知识平台。 至于为什么选择hexo的wikitten搭建 个人 Wiki ，以下便是我选择的原因： 界面简洁美观，排版字体友好 支持多级分类 方便修改和更新内容 部署简单 分类目录可展开和收缩 展开分类时可查看该分类下所有文章 / 词条的标题 每篇文章 / 词条能添加多个分类 / 标签 Wiki 可支持引用内部链接 使用 Markdown 书写文章 / 词条 支持全文搜索（可搜索内容和标题） 如果你是这方面的大神，希望不吝赐教；如果你也想搭建一个wiki，可以和我沟通和留言，但凡有空一定及时回复，笔芯。","tags":[],"categories":[]}]}